{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\nextjs-base-multilang\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport { useRouter } from 'next/router'; // import '../styling/index.styl'\n\nimport { useTranslation } from 'next-i18next';\nimport { serverSideTranslations } from 'next-i18next/serverSideTranslations';\nimport { Header } from '../components/Header';\nimport { Footer } from '../components/Footer';\n\nconst Homepage = () => {\n  const router = useRouter();\n  const {\n    t\n  } = useTranslation('common');\n  const abc = t('array', {\n    returnObjects: true\n  });\n  console.log(abc);\n  return __jsx(React.Fragment, null, __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(Header, {\n    heading: t('h1'),\n    title: t('title'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    locale: router.locale === 'en' ? 'de' : 'en',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, t('change-locale'))), __jsx(Link, {\n    href: \"/second-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, t('to-second-page')))), t('array', {\n    returnObjects: true\n  }).map(item => __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, item.name))), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport const getStaticProps = async ({\n  locale\n}) => ({\n  props: _objectSpread({}, await serverSideTranslations(locale, ['common', 'footer']))\n});\nexport default Homepage;","map":{"version":3,"sources":["D:/Project/nextjs-base-multilang/pages/index.js"],"names":["Link","useRouter","useTranslation","serverSideTranslations","Header","Footer","Homepage","router","t","abc","returnObjects","console","log","locale","map","item","name","getStaticProps","props"],"mappings":";;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B,C,CACA;;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,sBAAT,QAAuC,qCAAvC;AAEA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,MAAT,QAAuB,sBAAvB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAErB,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAQN,cAAc,CAAC,QAAD,CAA5B;AACA,QAAMO,GAAG,GAAGD,CAAC,CAAC,OAAD,EAAU;AAAEE,IAAAA,aAAa,EAAE;AAAjB,GAAV,CAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,CAAC,CAAC,IAAD,CAAlB;AAA0B,IAAA,KAAK,EAAEA,CAAC,CAAC,OAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,IAAI,EAAC,GADP;AAEE,IAAA,MAAM,EAAED,MAAM,CAACM,MAAP,KAAkB,IAAlB,GAAyB,IAAzB,GAAgC,IAF1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,CAAC,CAAC,eAAD,CADJ,CAJF,CADF,EASE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGA,CAAC,CAAC,gBAAD,CAHJ,CADF,CATF,CAHF,EAoBGA,CAAC,CAAC,OAAD,EAAU;AAAEE,IAAAA,aAAa,EAAE;AAAjB,GAAV,CAAD,CAAoCI,GAApC,CAAyCC,IAAD,IACvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,IAAI,CAACC,IAAX,CADD,CApBH,CADF,EAyBE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,CADF;AA6BD,CAnCD;;AAqCA,OAAO,MAAMC,cAAc,GAAG,OAAO;AAAEJ,EAAAA;AAAF,CAAP,MAAuB;AACnDK,EAAAA,KAAK,oBACA,MAAMf,sBAAsB,CAACU,MAAD,EAAS,CAAC,QAAD,EAAW,QAAX,CAAT,CAD5B;AAD8C,CAAvB,CAAvB;AAMP,eAAeP,QAAf","sourcesContent":["import Link from 'next/link'\nimport { useRouter } from 'next/router'\n// import '../styling/index.styl'\nimport { useTranslation } from 'next-i18next'\nimport { serverSideTranslations } from 'next-i18next/serverSideTranslations'\n\nimport { Header } from '../components/Header'\nimport { Footer } from '../components/Footer'\n\nconst Homepage = () => {\n\n  const router = useRouter()\n  const { t } = useTranslation('common')\n  const abc = t('array', { returnObjects: true });\n  console.log(abc)\n  return (\n    <>\n      <main>\n       \n        <Header heading={t('h1')} title={t('title')} />\n        <div>\n          <Link\n            href='/'\n            locale={router.locale === 'en' ? 'de' : 'en'}\n          >\n            <button>\n              {t('change-locale')}\n            </button>\n          </Link>\n          <Link href='/second-page'>\n            <button\n              type='button'\n            >\n              {t('to-second-page')}\n            </button>\n          </Link>\n        </div>\n        {t('array', { returnObjects: true }).map((item) => (\n          <div>{item.name}</div>\n        ))}\n      </main>\n      <Footer />\n    </>\n  )\n}\n\nexport const getStaticProps = async ({ locale }) => ({\n  props: {\n    ...await serverSideTranslations(locale, ['common', 'footer']),\n  },\n})\n\nexport default Homepage\n"]},"metadata":{},"sourceType":"module"}